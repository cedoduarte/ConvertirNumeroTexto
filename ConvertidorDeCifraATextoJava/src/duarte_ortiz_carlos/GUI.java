/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package duarte_ortiz_carlos;

/**
 *
 * @author cedo
 */
public class GUI extends javax.swing.JFrame {

    /**
     * Creates new form GUI
     */
    public GUI() {
        initComponents();
        setLocationRelativeTo(null);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        numeroDoubleSpinBox = new javax.swing.JTextField();
        textoLineEdit = new javax.swing.JTextField();
        pushButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("Número");

        jLabel2.setText("Texto");

        pushButton.setText("Convertir");
        pushButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pushButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(0, 303, Short.MAX_VALUE)
                        .addComponent(pushButton))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(jLabel2))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(textoLineEdit)
                            .addComponent(numeroDoubleSpinBox))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(numeroDoubleSpinBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(1, 1, 1)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(textoLineEdit, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pushButton)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void pushButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pushButtonActionPerformed
        // TODO add your handling code here:
        on_pushButton_clicked();
    }//GEN-LAST:event_pushButtonActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JTextField numeroDoubleSpinBox;
    private javax.swing.JButton pushButton;
    private javax.swing.JTextField textoLineEdit;
    // End of variables declaration//GEN-END:variables

    private void on_pushButton_clicked() {
        String valorCadena = numeroDoubleSpinBox.getText();
        String valorEntero = valorCadena.substring(0, valorCadena.indexOf('.'));
        String valorDecimal = valorCadena.substring(valorCadena.indexOf('.') + 1);
        String resultado = "Son: " + convierteNumeroTexto(Integer.parseInt(valorEntero)) + " " + valorDecimal
                + "/MN";
        textoLineEdit.setText(resultado);
    }

    private String convierteNumeroTexto(int valor) {
        String unidades[] = {"cero", "un", "dos", "tres", "cuatro", "cinco",
            "seis", "siete", "ocho", "nueve"};
        String teenagers[] = {"diez", "once", "doce", "trece", "catorce",
            "quince", "dieciseis", "diecisiete", "dieciocho",
            "diecinueve"};
        String decenas[] = {"veinte", "treinta", "cuarenta", "cincuenta",
            "sesenta", "setenta", "ochenta", "noventa"};
        String centenas[] = {"cien", "doscientos", "trescientos", "cuatrocientos",
            "quinientos", "seiscientos", "setecientos",
            "ochocientos", "novecientos"};
        String valorCadena;
        String resultado;
        int cantidadCifras;
        int ultimaCifra;
        int indice1;
        int indice2;
        valorCadena = String.valueOf(valor);
        cantidadCifras = valorCadena.length();
        resultado = "sin resultado";
        ultimaCifra = cantidadCifras - 1;
        switch (cantidadCifras) {
            case 1:
                resultado = unidades[Character.getNumericValue(valorCadena.charAt(0))];
                break;
            case 2:
                // teenagers
                if (valor >= 10 && valor < 20) {
                    indice1 = Character.getNumericValue(valorCadena.charAt(ultimaCifra));
                    resultado = teenagers[indice1];
                } else {
                    // múltiplos de 10
                    if (valor % 10 == 0) {
                        indice1 = Character.getNumericValue(valorCadena.charAt(0)) - 2;
                        resultado = decenas[indice1];
                    } else {
                        // adultos jóvenes
                        if (valor > 20 && valor < 30) {
                            indice1 = Character.getNumericValue(valorCadena.charAt(ultimaCifra));
                            resultado = "veinti" + unidades[indice1];
                        } else {
                            // adultos ya grandes
                            indice1 = Character.getNumericValue(valorCadena.charAt(0)) - 2;
                            indice2 = Character.getNumericValue(valorCadena.charAt(ultimaCifra));
                            resultado = decenas[indice1] + " y " + unidades[indice2];
                        }
                    }
                }
                break;
            case 3:
                // múltiplos de 100
                if (valor % 100 == 0) {
                    indice1 = Character.getNumericValue(valorCadena.charAt(0)) - 1;
                    resultado = centenas[indice1];
                } else {
                    // cualquier número de 3 cifras
                    indice1 = Character.getNumericValue(valorCadena.charAt(0)) - 1;
                    resultado = (centenas[indice1].equals("cien")
                            ? "ciento" : centenas[indice1])
                            + " " + convierteNumeroTexto(Integer.parseInt(valorCadena.substring(1)));
                }
                break;
            case 4:
                // múltiplos de mil
                if (valor % 1000 == 0) {
                    indice1 = Character.getNumericValue(valorCadena.charAt(0));
                    resultado = unidades[indice1] + " mil";
                } else {
                    // cualquier número de 4 cifras
                    indice1 = Character.getNumericValue(valorCadena.charAt(0));
                    resultado = unidades[indice1] + " mil"
                            + " " + convierteNumeroTexto(Integer.parseInt(valorCadena.substring(1)));
                }
                break;
            case 5:
                // teenagers
                if (valor >= 10000 && valor < 20000) {
                    indice1 = Character.getNumericValue(valorCadena.charAt(0));
                    resultado = teenagers[indice1] + " mil "
                            + convierteNumeroTexto(Integer.parseInt(valorCadena.substring(2)));
                    if (resultado.endsWith("cero")) {
                        resultado = resultado.substring(0, resultado.length()
                                - "cero".length() - 1);
                    }
                } else {
                    // múltiplos de 10000
                    if (valor % 10000 == 0) {
                        indice1 = Character.getNumericValue(valorCadena.charAt(0)) - 2;
                        resultado = decenas[indice1] + " mil";
                    } else {
                        resultado = convierteNumeroTexto(Integer.parseInt(valorCadena.substring(0, 2)))
                                + " mil "
                                + convierteNumeroTexto(Integer.parseInt(valorCadena.substring(2)));
                    }
                    if (resultado.endsWith("cero")) {
                        resultado = resultado.substring(0, resultado.length()
                                - "cero".length() - 1);
                    }
                }
                break;
        }
        return resultado;
    }
}
